Comparing files with diff means only having to screen a few lines for typos/sources of bugs.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It could teach you to do certain things first-time vs. later.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?


Pros
Your commits make logical sense.
You don’t have unnecessary versions of code

Cons
You could forget to commit and lose code



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Files in coding can be interconnected, while documents don’t tend to be


How can you use the commands git log and git diff to view the history of files?

log shows you commits. Choose two commit ids and diff with them


How might using version control make you more confident to make changes that could break something?

It’s very easy to find and fix problems